[{"/home/angelica/aebd/AEBD-Project/interface/oracle-monitor/src/index.js":"1","/home/angelica/aebd/AEBD-Project/interface/oracle-monitor/src/App.js":"2","/home/angelica/aebd/AEBD-Project/interface/oracle-monitor/src/components/Navbar.js":"3","/home/angelica/aebd/AEBD-Project/interface/oracle-monitor/src/components/DBSelector.js":"4","/home/angelica/aebd/AEBD-Project/interface/oracle-monitor/src/components/Monitor.js":"5","/home/angelica/aebd/AEBD-Project/interface/oracle-monitor/src/components/StorageStats.js":"6","/home/angelica/aebd/AEBD-Project/interface/oracle-monitor/src/components/SystemStats.js":"7","/home/angelica/aebd/AEBD-Project/interface/oracle-monitor/src/components/UsersStats.js":"8","/home/angelica/aebd/AEBD-Project/interface/oracle-monitor/src/utils/useFetch.js":"9","/home/angelica/aebd/AEBD-Project/interface/oracle-monitor/src/components/CenteredModal.js":"10","/home/angelica/aebd/AEBD-Project/interface/oracle-monitor/src/components/SystemSection.js":"11","/home/angelica/aebd/AEBD-Project/interface/oracle-monitor/src/components/StorageSection.js":"12"},{"size":220,"mtime":1609244684826,"results":"13","hashOfConfig":"14"},{"size":762,"mtime":1611245309224,"results":"15","hashOfConfig":"14"},{"size":1441,"mtime":1611761274007,"results":"16","hashOfConfig":"14"},{"size":1457,"mtime":1611764858894,"results":"17","hashOfConfig":"14"},{"size":1272,"mtime":1611700605898,"results":"18","hashOfConfig":"14"},{"size":2097,"mtime":1611763311816,"results":"19","hashOfConfig":"14"},{"size":6774,"mtime":1611696633791,"results":"20","hashOfConfig":"14"},{"size":2267,"mtime":1611767280893,"results":"21","hashOfConfig":"14"},{"size":1056,"mtime":1611245309224,"results":"22","hashOfConfig":"14"},{"size":2431,"mtime":1611775402611,"results":"23","hashOfConfig":"14"},{"size":814,"mtime":1611696739028,"results":"24","hashOfConfig":"14"},{"size":5688,"mtime":1611765704009,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1too5hi",{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"28"},"/home/angelica/aebd/AEBD-Project/interface/oracle-monitor/src/index.js",[],["60","61"],"/home/angelica/aebd/AEBD-Project/interface/oracle-monitor/src/App.js",["62","63","64"],"import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from './components/Navbar'\nimport DBSelector from './components/DBSelector'\nimport Monitor from './components/Monitor'\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { AnimateOnChange } from 'react-animation'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <DBSelector />\n            </Route>\n            <Route path=\"/monitor/:db_name\">\n              <Monitor path=\"/monitor\"/>\n            </Route>\n            <Route>\n              ERROR 404\n            </Route>\n          </Switch>\n        \n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/home/angelica/aebd/AEBD-Project/interface/oracle-monitor/src/components/Navbar.js",["65","66","67","68","69"],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport { VscPulse } from \"react-icons/vsc\";\nimport { MdStorage } from \"react-icons/md\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport {useState} from 'react'\n\nfunction NavbarComp(props) {\n\n\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"/\">\n          <img\n            alt=\"\"\n            src=\"/oracle.png\"\n            width=\"40\"\n            height=\"30\"\n            className=\"d-inline-block align-top\"\n          />{' '}\n          Oracle Monitor\n        </Navbar.Brand>\n        {props.showLinks && \n          <Nav className=\"mr-auto ml-3\" activeKey={props.selected}>\n            <Nav.Link eventKey={1} className=\"ml-3\" href={\"http://localhost:3000\" + props.path + \"/system\"}>System <VscPulse /></Nav.Link>\n            <Nav.Link eventKey={2} className=\"ml-3\" href={\"http://localhost:3000\" + props.path + \"/storage\"}>Storage <MdStorage /></Nav.Link>\n            <Nav.Link eventKey={3} className=\"ml-3\" href={\"http://localhost:3000\" + props.path + \"/users\"}>Users <FaUsers /></Nav.Link>\n          </Nav>\n        }\n        <span style={{\"fontWeight\": \"600\", \"color\": \"white\"}}>{props.selectedDB}</span>\n      </Navbar>\n      \n    </div>\n  );\n}\n\nexport default NavbarComp;\n","/home/angelica/aebd/AEBD-Project/interface/oracle-monitor/src/components/DBSelector.js",["70"],"import useFetch from \"../utils/useFetch\"\nimport Navbar from \"./Navbar\"\n\nimport Spinner from 'react-bootstrap/Spinner';\nimport Alert from 'react-bootstrap/Alert';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\nexport default function(props){\n    const {data : dbs, isPending, error} = useFetch(\"http://localhost:7050/db\")\n    return(\n        <>\n            <Navbar showLinks={false}/>\n            <div className=\"center-box\">\n                <h1 style={{\"self-align\" : \"center\"}} className=\"display-3\">Welcome!</h1>\n                {isPending && <Spinner animation=\"border\" />}\n                {error &&  <Alert variant=\"danger\">{error}</Alert>}\n                {dbs && dbs.map(el => {\n                    return(<Card style={{ width: 'auto', \"margin-top\": \"2vh\" }}>\n                    <Card.Body>\n                      <Card.Title>{el.DATABASE_NAME}</Card.Title>\n                      <Card.Subtitle className=\"mb-2 text-muted\">{el.INSTANCE_NAME}</Card.Subtitle>\n                      <Card.Text>\n                        <span>\n                            <span>{el.VERSION}</span>\n                        </span>\n                      </Card.Text>\n                      <Button as=\"a\" href={\"/monitor/\" + el.DATABASE_NAME + \"/system\"} size=\"sm\" variant=\"outline-dark\">Select</Button>\n                    </Card.Body>\n                  </Card>)\n                })}\n            </div>\n            \n        </>\n    )\n}","/home/angelica/aebd/AEBD-Project/interface/oracle-monitor/src/components/Monitor.js",["71","72","73"],"import {useParams} from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport StorageStats from \"./StorageStats\";\nimport SystemStats from \"./SystemStats\";\nimport UsersStats from \"./UsersStats\";\n\nexport default function(props){\n    const params = useParams()\n\n\n\n    return (\n        <>\n            <Switch>\n                <Route path={`${props.path}/:db_name/system`}>\n                    <Navbar selectedDB={params.db_name} selected={1} showLinks={true} path={props.path + \"/\" + params.db_name}/>\n                    <SystemStats db={params.db_name}/>\n                </Route>\n                <Route path={`${props.path}/:db_name/storage`}>\n                    <Navbar selectedDB={params.db_name} selected={2} showLinks={true} path={props.path + \"/\" + params.db_name}/>\n                    <StorageStats db={params.db_name}/>                    \n                </Route>    \n                <Route path={`${props.path}/:db_name/users`}>\n                    <Navbar selectedDB={params.db_name} selected={3} showLinks={true} path={props.path + \"/\" + params.db_name}/>\n                    <UsersStats db={params.db_name}/>\n                </Route>\n            </Switch>\n        </>\n    )\n}","/home/angelica/aebd/AEBD-Project/interface/oracle-monitor/src/components/StorageStats.js",["74"],"import useFetch from \"../utils/useFetch\"\n\nimport Spinner from 'react-bootstrap/Spinner';\nimport Alert from 'react-bootstrap/Alert';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport Card from \"react-bootstrap/Card\";\n\nimport StorageSection from \"./StorageSection\";\n\nexport default function Storage(props) {\n    const {data, isPending, error} = useFetch(\"http://localhost:7050/tablespaces/\" + props.db)\n\n    return (\n      <>\n        <div>\n              <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n                <div className=\"storage-content\">\n                  <div className=\"tablespaces-list\">\n                    <Card bg=\"light\" border=\"dark\">\n                      <Card.Header>\n                        Tablespaces:\n                      </Card.Header>\n                      <Card.Body>\n                      {isPending && <Spinner animation=\"border\" />}\n                      {error &&  <Alert variant=\"danger\">{error}</Alert>}\n                      <Nav variant=\"pills\" className=\"flex-column\">\n                        {data && data.map((el, idx) => {\n                          return(\n                            <Nav.Item key={idx}>\n                              <Nav.Link eventKey={el.TABLESPACE_NAME}>{el.TEMPORARY == 1 ? el.TABLESPACE_NAME + \" [TEMPORARY]\" : el.TABLESPACE_NAME}</Nav.Link>\n                            </Nav.Item>\n                          )\n                        })}\n                      </Nav>\n                      </Card.Body>\n                    </Card>\n\n                  </div>\n                  <div className=\"datafiles-stats\">\n                    <Tab.Content>\n                      {data && data.map((el, idx) => {\n                        return(<Tab.Pane key={idx} eventKey={el.TABLESPACE_NAME}>\n                          <StorageSection db={props.db} tablespace={el.TABLESPACE_NAME} />\n                        </Tab.Pane>)\n                      })}\n                    </Tab.Content>\n                  </div>\n                </div>\n              </Tab.Container>\n\n      </ div>\n    </>\n    )\n  }","/home/angelica/aebd/AEBD-Project/interface/oracle-monitor/src/components/SystemStats.js",["75","76","77","78","79","80","81","82","83"],"import { Line } from 'react-chartjs-2';\nimport useFetch from '../utils/useFetch';\nimport SystemSection from './SystemSection';\n\n\nconst dataChart = (l, v) => {return {\n  labels: l,\n  datasets: [\n    {\n      label: 'Data',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: '#FF8800',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: '#FF8800',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: '#FF8800',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: v\n    }\n  ]\n}};\n\nconst dataChart2 = (l, v1, v2) => {return {\n  labels: l,\n  datasets: [\n    {\n      label: 'Total (MB)',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: '#FF8800',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: '#FF8800',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: '#FF8800',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: v1\n    },\n    {\n      label: 'Used (MB)',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: '#4193bf',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: '#4193bf',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: '#4193bf',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: v2\n    }\n  ]\n}};\n\nexport default function System(props) {\n\n    return (<>\n\n      <SystemSection title=\"Number of CPU Cores\" url={\"http://localhost:7050/cpu/\" + props.db + \"?stat=NUM_CPU_CORES\"}\n\n        transform={(data) => {\n          let labels = []\n          let values = []\n          let aux = data.slice(Math.max(data.length - 10, 0))\n\n          aux.map( (el) => {\n            labels.push(el.QUERY_DATE.replace(/T|Z|\\.\\d{3}/g, ' ').trim())\n            values.push(el.VALUE)\n          })\n\n          return <Line width={900} height={300} data={dataChart(labels, values)} />\n        }}\n      \n      />\n\n      <SystemSection title=\"Nice Time\" url={\"http://localhost:7050/cpu/\" + props.db + \"?stat=NICE_TIME\"}\n\n\n        subtitle=\"Time (centi-secs) spent in low-priority user code\"\n        transform={(data) => {\n          let labels = []\n          let values = []\n          let aux = data.slice(Math.max(data.length - 10, 0))\n\n          aux.map( (el) => {\n            labels.push(el.QUERY_DATE.replace(/T|Z|\\.\\d{3}/g, ' ').trim())\n            values.push(el.VALUE)\n          })\n\n          return <Line width={900} height={300} data={dataChart(labels, values)} />\n        }}\n      \n      />\n\n      <SystemSection title=\"System Time\" url={\"http://localhost:7050/cpu/\" + props.db + \"?stat=SYS_TIME\"}\n\n\n        subtitle=\"Time (centi-secs) spent in the kernel\"\n        transform={(data) => {\n          let labels = []\n          let values = []\n          let aux = data.slice(Math.max(data.length - 10, 0))\n\n          aux.map( (el) => {\n            labels.push(el.QUERY_DATE.replace(/T|Z|\\.\\d{3}/g, ' ').trim())\n            values.push(el.VALUE)\n          })\n\n          return <Line width={900} height={300} data={dataChart(labels, values)} />\n        }}\n      \n      />\n\n      <SystemSection title=\"Busy Time\" url={\"http://localhost:7050/cpu/\" + props.db + \"?stat=BUSY_TIME\"}\n\n\n        subtitle=\"Time (centi-secs) that CPUs have been in the busy state\"\n        transform={(data) => {\n          let labels = []\n          let values = []\n          let aux = data.slice(Math.max(data.length - 10, 0))\n\n          aux.map( (el) => {\n            labels.push(el.QUERY_DATE.replace(/T|Z|\\.\\d{3}/g, ' ').trim())\n            values.push(el.VALUE)\n          })\n\n          return <Line width={900} height={300} data={dataChart(labels, values)} />\n        }}\n      \n      />\n\n      <SystemSection title=\"IO Wait Time\" url={\"http://localhost:7050/cpu/\" + props.db + \"?stat=IOWAIT_TIME\"}\n\n\n        subtitle=\"Time (centi-secs) spent waiting for IO\"\n        transform={(data) => {\n          let labels = []\n          let values = []\n          let aux = data.slice(Math.max(data.length - 10, 0))\n\n          aux.map( (el) => {\n            labels.push(el.QUERY_DATE.replace(/T|Z|\\.\\d{3}/g, ' ').trim())\n            values.push(el.VALUE)\n          })\n\n          return <Line width={900} height={300} data={dataChart(labels, values)} />\n        }}\n      \n      />\n\n      <SystemSection title=\"Load\" url={\"http://localhost:7050/cpu/\" + props.db + \"?stat=LOAD\"}\n\n\n        subtitle=\"Number of processes running or waiting on the run queue\"\n        transform={(data) => {\n          let labels = []\n          let values = []\n          let aux = data.slice(Math.max(data.length - 10, 0))\n\n          aux.map( (el) => {\n            labels.push(el.QUERY_DATE.replace(/T|Z|\\.\\d{3}/g, ' ').trim())\n            values.push(el.VALUE)\n          })\n\n          return <Line width={900} height={300} data={dataChart(labels, values)} />\n        }}\n      \n      />\n\n      <SystemSection title=\"Idle Time\" url={\"http://localhost:7050/cpu/\" + props.db + \"?stat=IDLE_TIME\"}\n\n\n        subtitle=\"Time (centi-secs) that CPUs have been in the idle state\"\n        transform={(data) => {\n          let labels = []\n          let values = []\n          let aux = data.slice(Math.max(data.length - 10, 0))\n\n          aux.map( (el) => {\n            labels.push(el.QUERY_DATE.replace(/T|Z|\\.\\d{3}/g, ' ').trim())\n            values.push(el.VALUE)\n          })\n\n          return <Line width={900} height={300} data={dataChart(labels, values)} />\n        }}\n      \n      />\n\n      <SystemSection title=\"Memory Statistics\" url={\"http://localhost:7050/memory/\" + props.db}\n\n\n        subtitle=\"Total and used memory\"\n        transform={(data) => {\n          let labels = []\n          let values1 = []\n          let values2 = []\n\n          let aux = data.slice(Math.max(data.length - 10, 0))\n\n          aux.map( (el) => {\n            labels.push(el.QUERY_DATE.replace(/T|Z|\\.\\d{3}/g, ' ').trim())\n            values1.push(el.TOTAL)\n            values2.push(el.USED)\n          })\n\n          return <Line width={900} height={300} data={dataChart2(labels, values1, values2)} />\n        }}\n      \n      />\n    \n    </>)\n  }","/home/angelica/aebd/AEBD-Project/interface/oracle-monitor/src/components/UsersStats.js",["84"],"import useFetch from \"../utils/useFetch\"\nimport Spinner from 'react-bootstrap/Spinner';\nimport Alert from 'react-bootstrap/Alert';\nimport Table from 'react-bootstrap/Table';\nimport { useState } from \"react\";\nimport CenteredModal from './CenteredModal';\n\nexport default function Users(props) {\n    const {data: users, isPending, error} = useFetch(\"http://localhost:7050/users/\"+ props.db)\n    \n    const [id,setId] = useState(null)\n    const [modalShow,setModalShow] = useState(false)\n    const [query, setQuery] = useState(\"\")\n\n    const startModal = (user_id) => {\n      setId(user_id)\n      setModalShow(true)\n    }\n    \n    return (\n        <>\n            <div className=\"center-box\">\n                {isPending && <Spinner animation=\"border\" />}\n                {error &&  <Alert variant=\"danger\">{error}</Alert>}\n                <input type=\"text\" onChange={(e) => setQuery(e.target.value)} />\n                {users && \n                    <Table style={{width: \"85%\", \"margin-top\": \"2vh\"}} striped bordered hover>\n                    <thead className=\"table-header\">\n                      <tr>\n                        <th>#</th>\n                        <th>Name</th>\n                        <th>Default Tablespace</th>\n                        <th>Temporary Tablespace</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                        {users.map(user =>{\n                          if(user.USER_NAME.trim().includes(query)){\n                            return(\n                              <tr onClick={() => startModal(user.USER_ID)}>\n                                  <td> {user.USER_ID} </td>\n                                  <td> {user.USER_NAME} </td>\n                                  <td> {user.DEFAULT_TABLESPACE} </td>\n                                  <td> {user.TEMPORARY_TABLESPACE} </td>\n                              </tr>\n                              )\n                          }\n                            \n                        })}\n                    </tbody>\n                  </Table>\n                }\n            </div>\n            {id!==null && <CenteredModal header=\"Privileges\" show={modalShow} onHide={() => {setId(null);setModalShow(false)}} user_id={id}/>}\n\n        </>\n    )\n  }","/home/angelica/aebd/AEBD-Project/interface/oracle-monitor/src/utils/useFetch.js",[],"/home/angelica/aebd/AEBD-Project/interface/oracle-monitor/src/components/CenteredModal.js",["85","86","87","88","89","90"],"import useFetch from \"../utils/useFetch\"\nimport Modal from 'react-bootstrap/Modal';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport { useState } from \"react\";\n\nexport default function ModalCentered(props){\n    const {data, isPending, error}= useFetch(\"http://localhost:7050/users_privileges/\"+ props.user_id)\n    const {data: sessions, isPending: waitSessions, error: sessionError} = useFetch(\"http://localhost:7050/sessions/\"+ props.user_id)\n    const [query, setQuery] = useState(\"\")\n\n    return (\n        <Modal\n          show={props.show}\n          onHide = {props.onHide}\n          size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n              {props.header}\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n              <h5>Sessions:</h5>\n              <ListGroup className=\"mb-3\">\n                \n                {props.user_id !== null && sessions && sessions.map(el =>{\n                    return (<ListGroup.Item>{\"Session ID: \" + el.SESSION_ID + \" | \" + el.SESSION_STATUS + \" | \" + el.LOGON_TIME}</ListGroup.Item>)\n                })}\n                {sessions && sessions.length == 0 && <Alert variant=\"warning\">No sessions for this user</Alert>}\n            </ListGroup>\n            {(isPending || waitSessions) && <Spinner animation=\"border\" />}\n            {error || sessionError &&  <Alert variant=\"danger\">{error}</Alert>}\n            <h5>Privileges: <span><input onChange={(e) => setQuery(e.target.value)} type=\"text\" /></span></h5>\n            \n            <ListGroup>\n                \n                {props.user_id !== null && data && data.map(el =>{\n                  if(el.PRIV_NAME.trim().includes(query)){\n                    return (<ListGroup.Item>{el.PRIV_NAME}</ListGroup.Item>)\n                  }\n                    \n                })}\n            </ListGroup>\n            {(isPending || waitSessions) && <Spinner animation=\"border\" />}\n            {error || sessionError &&  <Alert variant=\"danger\">{error}</Alert>}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={props.onHide}>Close</Button>\n          </Modal.Footer>\n        </Modal>\n      );\n}","/home/angelica/aebd/AEBD-Project/interface/oracle-monitor/src/components/SystemSection.js",[],"/home/angelica/aebd/AEBD-Project/interface/oracle-monitor/src/components/StorageSection.js",["91","92","93","94","95","96"],"import { useState } from \"react\";\nimport { Doughnut, Line } from 'react-chartjs-2';\n\nimport Spinner from 'react-bootstrap/Spinner';\nimport Alert from 'react-bootstrap/Alert';\nimport useFetch from \"../utils/useFetch\";\nimport Card from \"react-bootstrap/esm/Card\";\nimport ListGroup from \"react-bootstrap/esm/ListGroup\";\nimport Table from \"react-bootstrap/esm/Table\";\n\nconst dataChart = (l, v1,v2,v3) => {return {\n    labels: l,\n    datasets: [\n      {\n        label: 'Total Size (MB)',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: '#FF8800',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: '#FF8800',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: '#FF8800',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: v1\n      },\n      {\n        label: 'Free Space (MB)',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: '#3799bf',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: '#3799bf',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: '#3799bf',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: v2\n      },\n      {\n        label: 'Used Space (MB)',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: '#c73a5f',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: '#c73a5f',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: '#c73a5f',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: v3\n      }\n    ]\n  }};\n\nconst StorageSection = (props) => {\n    const {data : recent, isPending: waitRecent, error : errorRecent} = useFetch('http://localhost:7050/tablespaces/' + props.db + '?tablespace=' + props.tablespace + '&recent=true')\n    const {data : tablespaceData, isPending, error} = useFetch('http://localhost:7050/tablespaces/' + props.db + '?tablespace=' + props.tablespace)\n    const {data : datafiles, isPending : waitDatafiles, error: errorDatafile} = useFetch('http://localhost:7050/datafiles/'+ props.tablespace)\n    \n    const prepareData = dataI => {\n        let labels = []\n        let values1 = []\n        let values2 = []\n        let values3 = []\n        console.log(props.db)\n        dataI.map(el => {\n            console.log(el)\n            labels.push(el.QUERY_DATE)\n            values1.push(el.SIZEMB)\n            values2.push(el.FREE)\n            values3.push(el.USED)\n        })\n\n        return <Line data={dataChart(labels, values1, values2, values3)} width={500} />\n    }\n\n    return (\n    <>\n        <div className=\"storageSection mt-3 mr-2\">\n            <div>\n            {isPending && waitRecent && waitDatafiles && <Spinner animation=\"border\" />}\n            {error || errorRecent || errorDatafile &&  <Alert variant=\"danger\">{error}{errorRecent}{errorDatafile}</Alert>}\n            {tablespaceData && prepareData(tablespaceData)}\n            </div>\n            \n            <div className=\"mt-3 mb-3\">\n            {recent && <Doughnut className=\"mt-3\" data={{\n                \tlabels: [\n                        'Total (MB)',\n                        'Used (MB)',\n                        'Free (MB)'\n                    ],\n                    datasets: [{\n                        data: [recent[0].SIZEMB, recent[0].USED, recent[0].FREE],\n                        backgroundColor: [\n                            '#36A2EB',\n                            '#FF6384',\n                            '#FFCE56'\n                        ],\n                        hoverBackgroundColor: [\n                            '#36A2EB',\n                            '#FF6384',\n                            '#FFCE56'\n                        ]\n                    }]\n            }} />}\n                <div className=\"mt-2 mb-3\">\n                    <h5>Datafiles:</h5>\n                {datafiles && <Table className=\"datafileTable\" style={{width: \"85%\", \"margin-top\": \"2vh\"}} striped bordered hover>\n                    <thead className=\"table-header\">\n                      <tr>\n                        <th>Name</th>\n                        <th>Size (MB)</th>\n                        <th>Used (MB)</th>\n                        <th>Free (MB)</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                        {datafiles.map(el => {\n                            return(\n                            <tr>\n                                <td>{el.FILE_NAME}</td>\n                                <td>{el.SIZEMB}</td>\n                                <td>{el.USED}</td>\n                                <td>{el.FREE}</td>\n                            </tr>\n                            )\n                        })}\n                    </tbody>\n                </Table>}\n                </div>\n                    \n            </div>\n        \n\n        </div>\n    </>\n    );\n}\n \nexport default StorageSection;",{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":3,"column":8,"nodeType":"103","messageId":"104","endLine":3,"endColumn":14},{"ruleId":"101","severity":1,"message":"105","line":6,"column":50,"nodeType":"103","messageId":"104","endLine":6,"endColumn":54},{"ruleId":"101","severity":1,"message":"106","line":7,"column":10,"nodeType":"103","messageId":"104","endLine":7,"endColumn":25},{"ruleId":"101","severity":1,"message":"107","line":7,"column":27,"nodeType":"103","messageId":"104","endLine":7,"endColumn":33},{"ruleId":"101","severity":1,"message":"108","line":7,"column":35,"nodeType":"103","messageId":"104","endLine":7,"endColumn":41},{"ruleId":"101","severity":1,"message":"109","line":7,"column":43,"nodeType":"103","messageId":"104","endLine":7,"endColumn":48},{"ruleId":"101","severity":1,"message":"105","line":7,"column":50,"nodeType":"103","messageId":"104","endLine":7,"endColumn":54},{"ruleId":"101","severity":1,"message":"110","line":9,"column":9,"nodeType":"103","messageId":"104","endLine":9,"endColumn":17},{"ruleId":"111","severity":1,"message":"112","line":9,"column":1,"nodeType":"113","endLine":36,"endColumn":2},{"ruleId":"101","severity":1,"message":"107","line":3,"column":27,"nodeType":"103","messageId":"104","endLine":3,"endColumn":33},{"ruleId":"101","severity":1,"message":"105","line":3,"column":50,"nodeType":"103","messageId":"104","endLine":3,"endColumn":54},{"ruleId":"111","severity":1,"message":"112","line":8,"column":1,"nodeType":"113","endLine":31,"endColumn":2},{"ruleId":"114","severity":1,"message":"115","line":31,"column":85,"nodeType":"116","messageId":"117","endLine":31,"endColumn":87},{"ruleId":"101","severity":1,"message":"118","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":16},{"ruleId":"119","severity":1,"message":"120","line":92,"column":25,"nodeType":"121","messageId":"122","endLine":92,"endColumn":27},{"ruleId":"119","severity":1,"message":"120","line":111,"column":25,"nodeType":"121","messageId":"122","endLine":111,"endColumn":27},{"ruleId":"119","severity":1,"message":"120","line":130,"column":25,"nodeType":"121","messageId":"122","endLine":130,"endColumn":27},{"ruleId":"119","severity":1,"message":"120","line":149,"column":25,"nodeType":"121","messageId":"122","endLine":149,"endColumn":27},{"ruleId":"119","severity":1,"message":"120","line":168,"column":25,"nodeType":"121","messageId":"122","endLine":168,"endColumn":27},{"ruleId":"119","severity":1,"message":"120","line":187,"column":25,"nodeType":"121","messageId":"122","endLine":187,"endColumn":27},{"ruleId":"119","severity":1,"message":"120","line":206,"column":25,"nodeType":"121","messageId":"122","endLine":206,"endColumn":27},{"ruleId":"119","severity":1,"message":"120","line":227,"column":25,"nodeType":"121","messageId":"122","endLine":227,"endColumn":27},{"ruleId":"119","severity":1,"message":"123","line":37,"column":41,"nodeType":"121","messageId":"124","endLine":37,"endColumn":43},{"ruleId":"114","severity":1,"message":"115","line":34,"column":46,"nodeType":"116","messageId":"117","endLine":34,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":37,"column":20,"nodeType":"127","messageId":"128","endLine":37,"endColumn":22},{"ruleId":"125","severity":1,"message":"126","line":37,"column":36,"nodeType":"127","messageId":"128","endLine":37,"endColumn":38},{"ruleId":"119","severity":1,"message":"123","line":42,"column":64,"nodeType":"121","messageId":"124","endLine":42,"endColumn":66},{"ruleId":"125","severity":1,"message":"126","line":50,"column":20,"nodeType":"127","messageId":"128","endLine":50,"endColumn":22},{"ruleId":"125","severity":1,"message":"126","line":50,"column":36,"nodeType":"127","messageId":"128","endLine":50,"endColumn":38},{"ruleId":"101","severity":1,"message":"110","line":1,"column":10,"nodeType":"103","messageId":"104","endLine":1,"endColumn":18},{"ruleId":"101","severity":1,"message":"129","line":7,"column":8,"nodeType":"103","messageId":"104","endLine":7,"endColumn":12},{"ruleId":"101","severity":1,"message":"130","line":8,"column":8,"nodeType":"103","messageId":"104","endLine":8,"endColumn":17},{"ruleId":"119","severity":1,"message":"120","line":91,"column":22,"nodeType":"121","messageId":"122","endLine":91,"endColumn":24},{"ruleId":"125","severity":1,"message":"126","line":107,"column":35,"nodeType":"127","messageId":"128","endLine":107,"endColumn":37},{"ruleId":"125","severity":1,"message":"126","line":107,"column":52,"nodeType":"127","messageId":"128","endLine":107,"endColumn":54},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'AnimateOnChange' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'useState' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useFetch' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'Card' is defined but never used.","'ListGroup' is defined but never used.","no-global-assign","no-unsafe-negation"]